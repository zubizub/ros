---------------------------------------------------------------------------------------------
-------------требования к верстке -----------------------------------------------------------

1) максимальное использование миксинов. 
	Стили с вендорными префиксами есть в compass (/www/template/assets/css/libs/_mixins.scss)
	( см. коментарии в начале файла _mixins.scss )

2) размеры шрифтов пишем в em. 
	Для этого есть миксин в /template/assets/css/modules/_custom_mixins.scss
	pxToEm($pxval);
	Пример использования:
	font-size: pxToEm(16); //обязательно без px
	
3) максимальная влженность блоков и спользование ссылок на роителя
	.b-some-block {
		
		&.active {
			
		}
	}

4) разбиение css на 
	1) общие блоки (/assets/css/layout/)
	2) модули (часто повторяющиеся элементы) (/assets/css/modules/_ui.scss)
	3) ui (инпуты, кнопки и т.п.) (/assets/css/modules/_ui.scss)
	
5) разбиение js на блоки сайта по инструкции
	1) создаем файл тут аналогичный (примеру header.js тут же) /www/template/assets/js/prod/ИМЯ_ФАЙЛА_БЛОКА_САЙТА.js
	2) Меняем наименование класса в файле /www/template/assets/js/prod/ИМЯ_ФАЙЛА_БЛОКА_САЙТА.js 
		на нужный (то есть "header" на "ИМЯ_ФАЙЛА_БЛОКА_САЙТА" )
	3) перед кодом "Application = new function()" тут /www/template/assets/js/main.js 
		пишем "//= prod/ИМЯ_ФАЙЛА_БЛОКА_САЙТА.js" (это аналогично include в php)
	4) подключаем новый класс к Application
		после кода "Application = new function()" после всех подключенных в this через new классов подключаем свой:
		пишем "this.ИМЯ_ФАЙЛА_БЛОКА_САЙТА = new ИМЯ_ФАЙЛА_БЛОКА_САЙТА();"
		
6) Не писать инлайновые js и css в коде html даже для теста,
	так как, как правило, подобное остается при сдаче проекта и дальнейшая поддержка невозможна
	Допускается только написание и создание новых файлов в папках 
	/template/assets/js/ и /template/assets/css/
	
7) При создании новой страницы, пишем ссылку на неё в index.html
	Новая страница должна содержать php подключение header.php и footer.php примерно так:
	<?include 'template/header.php'?>
	html страницы
	<?include 'template/footer.php'?>
	
8) Работа должна вестись в репозитории.
	Каждая итерация работы должна заканчиваться коммитоми пушем на сервер.
	Комментарии к коммиту должны 
		1) описывать суть проведенных работ
		2) страницу, блок сайта или страницу с блоком, где проводились работы.
	Пример недопустимого комментария: "many changes"
	Пример допустимого комментария: "header. menu css and html added" или "catalog page. filter js added"