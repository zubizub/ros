---------------------------------------------------------------------------------------------
-------------описание структуры каркаса------------------------------------------------------

/www/template/assets/ - папка с исходниками js/css, шрифты. Тут пишем наш js и css, кидаем исходники шрифтов в папку fonts_ttf
/www/template/build/ - папка с скомпилированными js/css, а также подключаемые шрифты и картинки шрифты. Тут трогаем только папки img и fonts

Подробное описание файлов:

----------------------------------
//assets--------------------------

/www/template/assets/css/
	/common/ - общие стили
		_common.scss - стили для body, p, a, общего каркаса страницы
		_fonts.scss - подключение шрифтов
		_icons.scss - подключение классов иконок (для fontsawesome)
		_variables.scss - переменные для использованияв стилях (время анимации, цвета и т.п.)
	/layout/ - стили шаблона, разбитые поблочно (файлы приведены для примера)
		_header.scss - стили шапки сайта
		_footer.scss - стили подвала сайта
		_main_page_slider.scss - стили слайдера на главной страницесайта
	/libs/ - стили подключаемых библиотек
		_animate.scss - библиотека с классами css анимаций
		_bootstrap.scss - css фремворк бутстрап
		_font-awesome.min.scss - иконки шрифта font-awesome (также подлючается шрифт из )
									полный список иконок тут http://fortawesome.github.io/Font-Awesome/icons/
									класс для иконки .fa-НАИМЕНОВАНИЕ_ИЗ_СПИСКА_ИКОНОК_ПО_ССЫЛКЕ_ВЫШЕ
		_mixins.scss - библиотека миксинов compass
		_reset.scss - стили сброса css
	/modules/ - интерфейсные элементы, свои миксины
		_custom_mixins.scss - свои миксины sass
		_ui.scss - стили кнопок, инпутов, часто повторяющиеся однотипные объекты дизайна (например, карточка товара)
	main.scss - главный файл подключения всех sass файлов.
		
/www/template/assets/fonts_ttf/ - сюда складываем исходные ttf шрифты 
								  для возможного дальнейшего их перегенирирования в web-шрифты
								  
/www/template/assets/js/ - папка с библиотеками js и своим кодом js
	main.js - общий файл с подключением остальных js, 
			  в него пишем подключаемые файлы библиотек js таким образом:
			  //= libs/jquery.js
			  где 
				"libs/jquery.js" - путь к файлу 
				"//= " - команда подключения при сборке
	/libs/ - подключаемые библиотеки (подключаются до функции jquery методом, описанным выше)
	/prog/ - классы общего класса Application. 
		historyLoader.js - класс для фикса html5 history, содержит функцию по работе с html5 history.
			Использование в других классах:
				parentClass.historyLoader.pushHistory(_УРЛ_СТРОКОЙ_, _GET_ЗАПРОС_В_ВИДЕ_JSON_)
        usefulFunc.js - полезные функции, например, валидация на email, 
			задаем функции через that
				that._НАИМЕНОВАНИЕ_ФУНКЦИИ_= function(){ /*код функции*/ };
			Используем в других классах
				parentClass.usefulFunc._НАИМЕНОВАНИЕ_ФУНКЦИИ_();
        siteInterface.js - сюда пишем общие функции по работе с интерфесом (html), 
			например, функции по установке ошибок при валидации формы, используем аналогично usefulFunc
			
		Подключение нового класса:
			 1) создать файл js в попке /prog/ со структурой подобной /prog/header.js
			 2) подключить в функции jquery ready созданный файл (например "//= prog/header.js")
			 3) написать в классе Application (header приведен для примера)
				this.header = new header();
	
----------------------------------
//build---------------------------
	
/www/template/build/
	/css/ - в папку ничего не ложить, содержимое обновляется автоматически
		main.css - ни в коем случае не редактировать файл, так как он перезатрется, 
				   содержит все, что подключается в /www/template/assets/main.scss
	    main.css.map - автоматически генерируемый файл, создаваемый для браузеров на движке webkit 
						для корректного отображения в инспеторе 
						sass кода вместо css, также показывает правильный путь к файлу
	/js/ - файл со ск
		main.js - ни в коем случае не редактировать файл, так как он перезатрется, 
				   содержит все, что подключается в /www/template/assets/main.js
	/img/ - папка с картинками
	/fonts/ - папка со шрифтами для web
	
-----------------------------------
//php------------------------------
template/footer.php - открытие html и body, head, шапка сайта (html)
template/header.php - закрытие html и body, повал сайта (html)
template/init.php - константы и функции
